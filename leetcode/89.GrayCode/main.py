# coding=utf-8

class Solution(object):
    """
    格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。
    给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头。

    示例 1:
    输入: 2
    输出: [0,1,3,2]
    解释:
    00 - 0
    01 - 1
    11 - 3
    10 - 2

    对于给定的 n，其格雷编码序列并不唯一。
    例如，[0,2,3,1] 也是一个有效的格雷编码序列。
    00 - 0
    10 - 2
    11 - 3
    01 - 1
    示例 2:

    输入: 0
    输出: [0]
    解释: 我们定义格雷编码序列必须以 0 开头。
        给定编码总位数为 n 的格雷编码序列，其长度为 2n。当 n = 0 时，长度为 20 = 1。
        因此，当 n = 0 时，其格雷编码序列为 [0]。

    本题目可以通过规律获得，比如2位格雷码分别是 00,01,11,10
    3位的依次是 000，001，011，010，110，111，101，100
    可以看出来 就是低4位部分是一样的，高4位部分就是多加了一个1，然后是逆序的，并且数目都扩展了一倍，
    因此每次由n推到n+1的时候，n+1的低2^n位肯定是和n的所有位数一样的，高2^n位则是n的所有位数的逆序然后多了个1
    """
    def grayCode(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        r = [0]
        for i in xrange(0, n):
            for j in reversed(xrange(0, len(r))):
                r.append(r[j] | 1 << i)

        return r


if __name__ == '__main__':
    print Solution().grayCode(4)
